{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/add-category/add-category.component.css","webpack:///./src/app/admin/add-category/add-category.component.html","webpack:///./src/app/admin/add-category/add-category.component.ts","webpack:///./src/app/admin/add-images/add-images.component.css","webpack:///./src/app/admin/add-images/add-images.component.html","webpack:///./src/app/admin/add-images/add-images.component.ts","webpack:///./src/app/admin/add-images/image-item/image-item.component.css","webpack:///./src/app/admin/add-images/image-item/image-item.component.html","webpack:///./src/app/admin/add-images/image-item/image-item.component.ts","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/router/app-routing.module.ts","webpack:///./src/app/services/service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div>\\n  <form (submit)=\\\"onSubmit(category.value)\\\">\\n    <div class=\\\"form-group\\\">\\n        <label>Имя категории</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Имя категории\\\" #category>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label>Теги категории</label>\\n        <tag-input [(ngModel)]=\\\"tags\\\" [separatorKeys]=\\\"[' ']\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></tag-input>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Добавить Категорию</button>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-category',\n  templateUrl: './add-category.component.html',\n  styleUrls: ['./add-category.component.css']\n})\nexport class AddCategoryComponent implements OnInit {\n\n  tags;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(category) {\n    console.log(this.tags, category);\n  }\n\n}\n","module.exports = \":host {\\r\\n    display: block;\\r\\n    padding-left: 1%;\\r\\n}\\r\\n\\r\\n.main-form {\\r\\n    padding: 1% 1% 1% 0;\\r\\n}\"","module.exports = \"<div class=\\\"main-form\\\">\\n    <form enctype=\\\"application/x-www-form-urlencoded\\\" (submit)=\\\"onSubmit($event, form)\\\" #form>\\n      <div class=\\\"form-check\\\">\\n          <label class=\\\"form-check-label\\\">\\n            <input class=\\\"form-check-input\\\" name=\\\"one\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"inOne\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n              Загрузить всё в одну категорию ?\\n          </label>\\n      </div>\\n      <div class=\\\"form-group\\\" *ngIf=\\\"inOne\\\">\\n          <label>Category</label>\\n          <input type=\\\"text\\\" name=\\\"oneCategory\\\" class=\\\"form-control\\\" placeholder=\\\"type category\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"file\\\" class=\\\".form-control-file\\\" multiple name=\\\"images\\\" (change)=\\\"onChange(inputFiles)\\\" #inputFiles required>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Post</button>\\n    </form>\\n  </div>\\n  \\n  <div>\\n    <div *ngFor=\\\"let file of imagesList\\\">\\n      <app-image-item [inOne]=\\\"inOne\\\" [file]=\\\"file\\\" (selected)=\\\"onImgSelect($event)\\\"></app-image-item>\\n    </div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ServiceService } from '../../services/service.service';\n\n@Component({\n  selector: 'app-add-images',\n  templateUrl: './add-images.component.html',\n  styleUrls: ['./add-images.component.css']\n})\nexport class AddImagesComponent implements OnInit {\n\n  imagesList = [];\n\n  imageData = Object.create(null);\n\n  inOne;\n\n  constructor(private service: ServiceService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(e, form) {\n    e.preventDefault();\n    let data = new FormData(form);\n    if(this.inOne) { \n      for(let image in this.imageData) { delete  this.imageData[image]['category']}\n    };\n    data.append('filesData', JSON.stringify(this.imageData))\n    this.service.postImages(data).subscribe((data: any) => {\n      console.log(data);\n    });\n  }\n\n  onChange(inputFiles) {\n    console.log(inputFiles.files);//FileReader\n    for(let file of inputFiles.files) {//readAsDataURL\n      let reader = new FileReader();\n      reader.addEventListener(\"load\",  () => {\n        this.imagesList.push({src: reader.result, fileName: file.name});\n      }, false);\n      reader.readAsDataURL(file);\n    }\n  }\n\n  onImgSelect(e) {\n    if(e.file && !this.imageData[e.file]) this.imageData[e.file] = Object.assign(this.imageData[e.file] || {});\n    if(e.tags) this.imageData[e.file]['tegs'] = e.tags;\n    console.log()\n    if(e.category) this.imageData[e.file]['category'] = e.category;\n  }\n\n}\n","module.exports = \".img-item {\\r\\n    padding: 1% 0 1% 1%;\\r\\n    border: 2px solid black;\\r\\n    border-radius: 15px;\\r\\n    margin-bottom: 1%;\\r\\n}\\r\\n\\r\\n.img-fluid {\\r\\n    max-width: 60%;\\r\\n}\\r\\n\\r\\n/* .img-item > p {\\r\\n    margin: 0;\\r\\n    padding: 10px 10px 10px 0;\\r\\n}\\r\\n\\r\\nselect {\\r\\n    \\r\\n} */\"","module.exports = \"<div class=\\\"img-item row\\\">\\n  <div class=\\\"col-3\\\">\\n    <p>File name: {{file.fileName}}</p>\\n    <img src=\\\"{{file.src}}\\\" alt=\\\"\\\" class=\\\"img-fluid\\\">\\n  </div>\\n  <div class=\\\"col-3 mr-auto\\\">\\n    <div *ngIf=\\\"!inOne\\\">\\n      <label>Выберите категорию</label>\\n      <select class=\\\"form-control\\\" required (change)=\\\"onSelect(category.value)\\\" #category>\\n        <option selected disabled>Choose category</option>\\n        <option>UK</option>\\n        <option>France</option>\\n        <option>Germany</option>\\n        <option>Italy</option>\\n      </select>\\n    </div>\\n    <div>\\n      <tag-input [(ngModel)]=\\\"tags\\\" [separatorKeys]=\\\"[' ']\\\" (onAdd)=\\\"onTagChange()\\\" (onRemove)=\\\"onTagChange()\\\"></tag-input>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-image-item',\n  templateUrl: './image-item.component.html',\n  styleUrls: ['./image-item.component.css']\n})\nexport class ImageItemComponent implements OnInit {\n\n  @Input() file;\n  @Input() inOne;\n\n  tags;\n\n  @Output() selected = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onSelect(category) {\n    console.log('test select', {category, file: this.file.fileName, tags: this.tags});\n    this.selected.emit({category, file: this.file.fileName, tags: this.tags});\n  }\n\n  onTagChange() {\n    console.log('test tags input', {file: this.file.fileName, tags: this.tags});\n    this.selected.emit({file: this.file.fileName, tags: this.tags});\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"!isAuth\\\">\\n  Auth Form!\\n</div>\\n\\n<div *ngIf=\\\"isAuth\\\">\\n  <a routerLink=\\\"addCategoty\\\">Add Category</a><br>\\n  <a routerLink=\\\"addImages\\\">Add Images</a>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ServiceService } from '../services/service.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  isAuth = true;\n\n  constructor(private service: ServiceService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule }    from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\n\nimport { TagInputModule } from 'ngx-chips';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; // this is needed!\n\nimport { AppComponent } from './app.component';\nimport { AdminComponent } from './admin/admin.component';\n\nimport { AppRoutingModule } from './router/app-routing.module';\nimport { ImageItemComponent } from './admin/add-images/image-item/image-item.component';\nimport { AddImagesComponent } from './admin/add-images/add-images.component';\nimport { AddCategoryComponent } from './admin/add-category/add-category.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AdminComponent,\n    ImageItemComponent,\n    AddImagesComponent,\n    AddCategoryComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    TagInputModule, \n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule }             from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AdminComponent } from '../admin/admin.component';\r\nimport { AddImagesComponent } from '../admin/add-images/add-images.component';\r\nimport { AddCategoryComponent } from '../admin/add-category/add-category.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'admin', component: AdminComponent},\r\n  { path: 'admin/addImages', component: AddImagesComponent },\r\n  { path: 'admin/addCategoty', component: AddCategoryComponent }\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n\n  apiImageUrl = '/api.images/';\n\n  constructor(private http: HttpClient) { }\n\n  postImages(data) {\n    console.log('service', data);\n    return this.http.post(`${this.apiImageUrl}/upload`, data, {\n      headers: new HttpHeaders()\n    })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}