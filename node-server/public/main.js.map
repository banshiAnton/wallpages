{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/router/app-routing.module.ts","webpack:///./src/app/services/service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div>\\n  <form enctype=\\\"application/x-www-form-urlencoded\\\" (submit)=\\\"onSubmit($event, form)\\\" #form>\\n    <input type=\\\"text\\\" name=\\\"title\\\">\\n    <input type=\\\"file\\\" multiple name=\\\"images\\\" (change)=\\\"onChange(inputFiles)\\\" #inputFiles>\\n    <button type=\\\"submit\\\">Post</button>\\n  </form>\\n</div>\\n\\n<div>\\n  <div *ngFor=\\\"let file of imagesList\\\">\\n    <p>{{file.fileName}}</p>\\n    <img src=\\\"{{file.src}}\\\" alt=\\\"\\\" width=\\\"20%\\\" height=\\\"20%\\\">\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { ServiceService } from '../services/service.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  imagesList = [];\n\n  constructor(private service: ServiceService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(e, form) {\n    e.preventDefault();\n    let data = new FormData(form);\n    this.service.postImages(data).subscribe((data: any) => {\n      console.log(data);\n    });\n  }\n\n  onChange(inputFiles) {\n    console.log(inputFiles.files);//FileReaderSync\n    for(let file of inputFiles.files) {//readAsDataURL\n      let reader = new FileReader();\n      reader.addEventListener(\"load\",  () => {\n        this.imagesList.push({src: reader.result, fileName: file.name});\n      }, false);\n      reader.readAsDataURL(file);\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }    from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AdminComponent } from './admin/admin.component';\n\nimport { AppRoutingModule } from './router/app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AdminComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule }             from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AdminComponent } from '../admin/admin.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'admin', component: AdminComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n\n  url = '/';\n\n  constructor(private http: HttpClient) { }\n\n  postImages(data) {\n    console.log('service', data);\n    return this.http.post(`${this.url}upload`, data, {\n      headers: new HttpHeaders()\n    })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}